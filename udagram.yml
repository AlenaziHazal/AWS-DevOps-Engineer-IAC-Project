Description: CD12352 - Infrastructure as Code Project - Udagram

Parameters:
  ProjectName:
    Description: IAC project name
    Type: String
  MyBucketName:
    Description: Bucket name
    Type: String

  ASGDesiredCapacity:
    Description: Desired capacity for asg
    Type: String
    Default: 4

Resources:
  # Add your resources here
  # We include a portion of the LaunchTemplate resource so you can use the UserData.
  LBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Fn::ImportValue:
          !Sub "${ProjectName}-VPC-IAC"
      GroupDescription: Security group for LB
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Fn::ImportValue:
          !Sub "${ProjectName}-VPC-IAC"
      GroupDescription: Security group for Application servers
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80 
        ToPort: 80
        SourceSecurityGroupId: !Ref LBSecurityGroup

  WebAppLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateName: !Sub "web-servers-templates"
      LaunchTemplateData:
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            apt-get update -y
            sudo apt-get install nginx -y
            service nginx start
            echo "It works! Udagram, Udacity" | sudo touch /var.www/html/index.html
        ImageId: ami-053b0d53c279acc90
        SecurityGroupIds:
          - !Ref WebSecurityGroup
        InstanceType: t2.micro
        IamInstanceProfile:
          Name: !Ref WebServerInstanceProfile
        BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: '10'

  WebServerInstanceRole3:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "web-servers-instance-role-1"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: 'Allow'
          Principal:
            Service:
            - 'ec2.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      Policies:
        - PolicyName: s3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - 's3:GetObject'
              - 's3:ListBucket'
              Resource:
                - Fn::Sub: ${MyBucketName}/*

  WebServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: '/'
      Roles:
      - !Ref WebServerInstanceRole3
  
  WebASGGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: 
          !Sub "${ProjectName}-private-subnets-1"
      LaunchTemplate:
        LaunchTemplateId: !Ref WebAppLaunchTemplate
        Version: !GetAtt WebAppLaunchTemplate.LatestVersionNumber
      MinSize: '1'
      DesiredCapacity: !Ref ASGDesiredCapacity
      MaxSize: '6'
      TargetGroupARNs:
        - Ref: WebAppTG

  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${ProjectName}-public-subnet-2"
      - Fn::ImportValue: !Sub "${ProjectName}-public-subnet-1"
      SecurityGroups:
      - Ref: LBSecurityGroup

  WebAppTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${ProjectName}-VPC-IAC"

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTG
      LoadBalancerArn:
        Ref: WebAppLB
      Port: '80'
      Protocol: HTTP

  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref 'WebAppTG'
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref 'Listener'
      Priority: 1   

Outputs:
    WebAppLBURL:
        Value: !Join [ "", [ "http://", !GetAtt WebAppLB.DNSName ] ]
        Description: URL address of the Load Balancer

